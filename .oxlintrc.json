{
  "$schema": "./node_modules/oxlint/configuration_schema.json",
  "plugins": [
    "typescript",
    "unicorn",
    "react",
    "react-perf",
    "oxc",
    "import",
    "jsdoc",
    "jsx-a11y",
    "node",
    "promise"
  ],
  "ignorePatterns": [
    "node_modules",
    "dist",
    "build",
    "public",
    "pnpm-lock.yaml",
    "chrome",
    "firefox",
    "output"
  ],
  "rules": {

    "oxc/no-accumulating-spread": "warn",
    "oxc/no-map-spread": "error",
    "oxc/approx-constant": "warn",
    "oxc/misrefactored-assign-op": "warn",

    "no-var": "warn",
    "no-with": "off",
    "array-callback-return": "warn",
    "block-scoped-var": "error",
    "default-case-last": "error",
    "eqeqeq": "error",
    "no-alert": "error",
    "no-array-constructor": "error",
    "no-case-declarations": "error",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-const-assign": "error",
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-empty-pattern": "error",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-fallthrough": "error",
    "no-iterator": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-native-nonconstructor": "error",
    "no-new-wrappers": "error",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-globals": "error",
    "no-self-compare": "error",
    "no-template-curly-in-string": "error",
    "no-throw-literal": "error",
    "no-unexpected-multiline": "error",
    "no-unneeded-ternary": "error",
    "no-unreachable": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-constructor": "error",
    "prefer-exponentiation-operator": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "symbol-description": "error",
    "unicode-bom": "error",
    "vars-on-top": "error",
    "yoda": "error",

    "prefer-object-has-own": "error",
    "operator-assignment": "error",
    "require-yield": "off",
    "no-unused-vars": "off", // handle this silently in eslint

    "node/no-new-require": "error",
    "node/no-exports-assign": "warn",

    "jsdoc/check-access": "warn",
    "jsdoc/check-param-names": "warn",
    "jsdoc/check-property-names": "warn",
    "jsdoc/empty-tags": "warn",
    "jsdoc/implements-on-classes": "warn",
    "jsdoc/no-defaults": "warn",
    "jsdoc/require-param-name": "warn",
    "jsdoc/require-property": "warn",
    "jsdoc/require-property-description": "warn",
    "jsdoc/require-property-name": "warn",
    "jsdoc/require-returns-description": "warn",

    "import/first": "error",
    "import/no-duplicates": "error",
    "import/no-mutable-exports": "error",
    "import/no-named-default": "error",
    "import/no-self-import": "error",
    "import/no-webpack-loader-syntax": "error",
    "import/newline-after-import": "error",

    "import/no-cycle": "error",
    "import/export": "error",
    "import/named": "error",

    "unicorn/consistent-empty-array-spread": "warn",
    "unicorn/error-message": "warn",
    "unicorn/new-for-builtins": "error",
    "unicorn/no-instanceof-builtins": "error",
    "unicorn/number-literal-case": "error",
    "unicorn/prefer-dom-node-text-content": "warn",
    "unicorn/prefer-includes": "warn",
    "unicorn/prefer-node-protocol": "error",
    "unicorn/prefer-number-properties": "error",
    "unicorn/prefer-string-starts-ends-with": "error",
    "unicorn/no-abusive-eslint-disable": "error",
    "unicorn/no-nested-ternary": "warn",
    "unicorn/consistent-function-scoping": "warn",
    "unicorn/consistent-assert": "error",

    "unicorn/no-accessor-recursion": "error",
    "unicorn/consistent-existence-index-check": "error",
    "unicorn/require-post-message-target-origin": "error",
    "unicorn/consistent-date-clone": "error",
    "unicorn/prefer-modern-dom-apis": "error",
    "unicorn/prefer-array-flat-map": "error",
    "unicorn/prefer-array-index-of": "warn",
    "unicorn/prefer-logical-operator-over-ternary": "warn",
    "unicorn/prefer-negative-index": "warn",
    "unicorn/prefer-object-from-entries": "warn",
    "unicorn/prefer-string-trim-start-end": "warn",
    "unicorn/prefer-string-raw": "warn",
    "unicorn/prefer-structured-clone": "warn",
    "unicorn/require-array-join-separator": "warn",
    "unicorn/switch-case-braces": "warn",
    "unicorn/text-encoding-identifier-case": "warn",
    "unicorn/throw-new-error": "off",
    "unicorn/no-null": "error",
    "unicorn/no-await-expression-member": "error",
    "unicorn/prefer-modern-math-apis": "warn",
    "unicorn/prefer-set-has": "warn",
    "unicorn/prefer-array-find": "warn",

    "react/jsx-no-duplicate-props": "warn",
    "react/jsx-uses-vars": "warn",
    "react/no-array-index-key": "warn",
    "react/jsx-no-comment-textnodes": "warn",

    "react/style-prop-object": "error",

    "react_perf/jsx-no-new-array-as-prop": "warn",
    "react_perf/jsx-no-new-function-as-prop": "warn",
    "react_perf/jsx-no-new-object-as-prop": "warn",

    "typescript/prefer-literal-enum-member": "warn",
    "typescript/no-import-type-side-effects": "warn",
    "typescript/no-unsafe-function-type": "error",

    "typescript/no-confusing-no-null-assertion": "error",
    "typescript/consistent-type-definitions": "error",
    "typescript/consistent-type-imports": "error",
    "typescript/consistent-indexed-object-style": "error",
    "typescript/consistent-generic-constructors": "error",
    "typescript/prefer-function-type": "error"
  },
  "settings": {
    "jsdoc": {
      "tagNamePreference": {
        // this is a special comment directive that enables per-file environment specifications for vitest tests
        "vitest-environment": "vitest-environment"
      }
    }
  },
  "overrides": [
    {
      // Scope some react-specific rules to only lint in jsx/tsx files
      "files": ["**/*.tsx", "**/*.jsx"],
      "rules": {
        "react/rules-of-hooks": "warn"
      }
    }
  ]
}
